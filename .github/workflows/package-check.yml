name: OpenMx Package Check

on:
  push:
    branches: [ analytDerivs ]
  pull_request:
    branches: [ analytDerivs ]

jobs:
  build:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: ubuntu-20.04, r: 'release'}
          - {os: macos-latest, r: 'release'}
          # Add more configurations if you want to test on Windows, or with different R versions
          #- {os: windows-latest, r: 'release'}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v3

      - name: Set up R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}

      - name: Install system dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libcurl4-openssl-dev libssl-dev libxml2-dev

     - name: Install system dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          brew install openssl@1.1 # or the specific version you need
      # Add similar steps for Windows if needed

      - name: Install dependencies
        run: |
          install.packages(c("devtools", "rcmdcheck"))
          devtools::install_deps(dependencies = TRUE)
        shell: Rscript {0}

      - name: Check
        run: |
          rcmdcheck::rcmdcheck(args = "--no-manual", error_on = "error", check_dir = "check")
        shell: Rscript {0}

     - name: Build package
        run: |
          R CMD build .
        shell: Rscript {0}

      - name: Upload package artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.config.os }}_${{ matrix.config.r }}_package
          path: ${{ github.workspace }}/*.tgz  
